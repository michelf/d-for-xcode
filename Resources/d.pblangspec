
// D language specification for Xcode 2
// Copyright (C) 2007-2008  Michel Fortin
//
// D for Xcode is free software; you can redistribute it and/or modify it 
// under the terms of the GNU General Public License as published by the Free 
// Software Foundation; either version 2 of the License, or (at your option) 
// any later version.
//
// D for Xcode is distributed in the hope that it will be useful, but WITHOUT 
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for 
// more details.
//
// You should have received a copy of the GNU General Public License
// along with D for Xcode; if not, write to the Free Software Foundation, 
// Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA.

(
	{
		Identifier = d;
		Name = D;
		Description = D;
		BasedOn = pbx_root_language;
//		SourceScannerClassName = DXDSourceScanner;
		SourceLexerClassName = DXDSourceLexer;
		SupportsIndentation = YES;
		Indentation = {
		};
		SyntaxColoring = {
			CaseSensitive = YES;
			UnicodeSymbols = YES;
			IndexedSymbols = YES;
			CommentsCanBeNested = YES;
			IdentifierStartChars = "_";
			IdentifierChars = "_";
			MultiLineComment = (
				( "/*", "*/" ),
				( "/+", "+/" )
			);
			DocComment = "*";
			SingleLineComment = (
				"//"
			);
			String = (
				( "\"", "\"" )
			);
			EscapeCharacter = "\\";
			Character = (
				( "'", "'" )
			);
			Keywords = (
				abstract,
				alias,
				align,
				asm,
				assert,
				auto,
				body,
				break,
				case,
				cast,
				catch,
				class,
				const,
				continue,
				debug,
				default,
				delegate,
				delete,
				deprecated,
				do,
				else,
				enum,
				export,
				extern,
				final,
				finally,
				for,
				foreach,
				function,
				goto,
				if,
				import,
				in,
				inout,
				interface,
				invariant,
				is,
				mixin,
				module,
				new,
				out,
				override,
				package,
				pragma,
				private,
				protected,
				public,
				return,
				scope,
				static,
				struct,
				super,
				switch,
				synchronized,
				template,
				this,
				throw,
				try,
				typedef,
				typeof,
				union,
				unittest,
				version,
				volatile,
				while,
				with,
			);
			AltKeywords = (
				false,
				null,
				true,
				char,
				wchar,
				dchar,
				bool,
				byte,
				ubyte,
				short,
				ushort,
				int,
				uint,
				long,
				ulong,
				cent,
				ucent,
				float,
				cfloat,
				ifloat,
				double,
				cdouble,
				idouble,
				real,
				creal,
				ireal,
				void
			);
		};
	}
)
